<% if(typeof doctype !== 'undefined'){ %>
  <%- doctype %>
<% } else { %>
  <!doctype html>
<% } %>
<% if(typeof external_html !== 'undefined'){ %>
  <%- external_html %>
<% } else { %>
  <!--[if lt IE 7]>      <html class="no-js lt-ie9 lt-ie8 lt-ie7" lang=""> <![endif]-->
  <!--[if IE 7]>         <html class="no-js lt-ie9 lt-ie8" lang=""> <![endif]-->
  <!--[if IE 8]>         <html class="no-js lt-ie9" lang=""> <![endif]-->
  <!--[if gt IE 8]><!-->
  <html class="no-js" lang="">
  <!--<![endif]-->
    <% if(typeof html !== 'undefined'){ %>
      <%- html %>
    <% } else { %>
      <% if(typeof external_head !== 'undefined') { %>
        <%- external_head %>
      <% } else { %>
        <head>
          <% if(typeof head !== 'undefined') { %>
            <%- head %>
          <% } else { %>
            <title><%=typeof title == 'undefined' ? 'Garou no Go' : title%></title>

            <% if (typeof head_meta != 'undefined') { %>
              <%- head_meta %>
            <% } else { %>
              <meta charset="utf-8">
              <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
              <meta name="description" content="">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <% if (typeof head_meta_after != 'undefined') { %>
                <%- head_meta_after %>
              <% } %>
            <% } %>

            <% if (typeof head_links != 'undefined') { %>
              <%- head_links %>
            <% } else { %>
              <link rel="apple-touch-icon" href="/images/apple-touch-icon.png">
            <% } %>

            <% if (typeof head_css != 'undefined') { %>
              <%- head_css %>
            <% } else { %>
              <%/*
                  Stylesheets and Preprocessors
                  ==============================

                  You can always bring in CSS files manually with `<link>` tags, or asynchronously
                  using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
                  of Sails' conventional asset pipeline (boilerplate Gruntfile).

                  By default, stylesheets from your `assets/styles` folder are included
                  here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
                  are supported. In production, your styles will be minified and concatenated into
                  a single file.

                  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
                  For example, here are a few things you could do:

                      + Change the order of your CSS files
                      + Import stylesheets from other directories
                      + Use a different or additional preprocessor, like SASS, SCSS or Stylus
              */%>
              <!--STYLES-->
              <link rel="stylesheet" href="/styles/importer.css">
              <!--STYLES END-->
            <% } %>

            <% if (typeof head_js != 'undefined') { %>
              <%- head_js %>
            <% } else { %>
              <% if (typeof head_js_before != 'undefined') { %>
                <%- head_js_before %>
              <% } %>

              <% if (typeof head_js_after != 'undefined') { %>
                <%- head_js_after %>
              <% } %>
            <% } %>
          <% } %>
        </head>
      <% } %>

      <% if(typeof external_body !== 'undefined') { %>
        <%- external_body %>
      <% } else { %>
        <body>
          <!--[if lt IE 8]>
            <p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p>
          <![endif]-->
          <% if(typeof body !== 'undefined') { %>
            
          <% } else { %>
            <% if(typeof content !== 'undefined') { %>
              <%- content %>
            <% } %>
            <% if(typeof body_template !== 'undefined') { %>
              <%- body_template %>
            <% } else { %>
              <%/*
                  Client-side Templates
                  ========================

                  HTML templates are important prerequisites of modern, rich client applications.
                  To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
                  that you load these templates client-side.

                  By default, your Gruntfile is configured to automatically load and precompile
                  client-side JST templates in your `assets/templates` folder, then
                  include them here automatically (between TEMPLATES and TEMPLATES END).

                  To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
                  For example, here are a few things you could do:

                      + Import templates from other directories
                      + Use a different template engine (handlebars, jade, dust, etc.)
                      + Internationalize your client-side templates using a server-side
                        stringfile before they're served.
              */%>
              <!--TEMPLATES-->
              
              <!--TEMPLATES END-->
            <% } %>
            <% if(typeof body_js !== 'undefined') { %>
              <%- body_js %>
            <% } else { %>
              <%/*

                Client-side Javascript
                ========================

                You can always bring in JS files manually with `script` tags, or asynchronously
                on the client using a solution like AMD (RequireJS).  Or, if you like, you can
                take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

                By default, files in your `assets/js` folder are included here
                automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
                CoffeeScript (.coffee) are supported. In production, your scripts will be minified
                and concatenated into a single file.

                To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
                For example, here are a few things you could do:

                    + Change the order of your scripts
                    + Import scripts from other directories
                    + Use a different preprocessor, like TypeScript

              */%>
              <!--SCRIPTS-->
              <script src="/js/dependencies/sails.io.js"></script>
              <script src="/js/google-analytics.js"></script>
              <script src="/js/main.js"></script>
              <script src="/js/vendor/jquery/1.11.2/jquery-1.11.2.min.js"></script>
              <script src="/js/vendor/modernizr/2.8.3/modernizr-2.8.3-respond-1.4.2.min.js"></script>
              <script src="/js/vendor/modernizr/2.8.3/plugins.js"></script>
              <!--SCRIPTS END-->
            <% } %>
          </body>
        <% } %>
      <% } %>
    <% } %>
  </html>
<% } %>