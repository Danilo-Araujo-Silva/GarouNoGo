<% if(typeof doctype !== 'undefined'){ %>
  <%= doctype %>
<% } else { %>
  <!DOCTYPE html>
<% } %>
<% if(typeof external_html !== 'undefined'){ %>
  <%= external_html %>
<% } else { %>
  <html>
    <% if(typeof html !== 'undefined'){ %>
      <%= html %>
    <% } else { %>
      <% if(typeof external_head !== 'undefined') { %>
        <%= external_head %>
      <% } else { %>
        <head>
          <% if(typeof head !== 'undefined') { %>
            <%= head %>
          <% } else { %>
            <title><%=typeof title == 'undefined' ? 'Garou no Go' : title%></title>

            <% if (typeof head_meta != 'undefined') { %>
              <%= head_meta %>
            <% } else { %>
              <%/* Viewport mobile tag for sensible mobile support */%>
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <% if (typeof head_meta_after != 'undefined') { %>
                <%= head_meta_after %>
              <% } %>
            <% } %>

            <% if (typeof head_css != 'undefined') { %>
              <%= head_css %>
            <% } else { %>
              <%/*
                  Stylesheets and Preprocessors
                  ==============================

                  You can always bring in CSS files manually with `<link>` tags, or asynchronously
                  using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
                  of Sails' conventional asset pipeline (boilerplate Gruntfile).

                  By default, stylesheets from your `assets/styles` folder are included
                  here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
                  are supported. In production, your styles will be minified and concatenated into
                  a single file.

                  To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
                  For example, here are a few things you could do:

                      + Change the order of your CSS files
                      + Import stylesheets from other directories
                      + Use a different or additional preprocessor, like SASS, SCSS or Stylus
              */%>
              <!--STYLES-->
              <% if (typeof head_css != 'undefined') { %>
                <%= head_css %>
              <% } else { %>
                <% if (typeof head_css_before != 'undefined') { %>
                  <%= head_css_before %>
                <% } %>
                <link rel="stylesheet" href="/styles/importer.css">
                <% if (typeof head_css_after != 'undefined') { %>
                  <%= head_css_after %>
                <% } %>
              <% } %>
              <!--STYLES END-->
            <% } %>

            <% if (typeof head_js != 'undefined') { %>
              <%= head_js %>
            <% } else { %>
              <% if (typeof head_js_before != 'undefined') { %>
                <%= head_js_before %>
              <% } %>

              <% if (typeof head_js_after != 'undefined') { %>
                <%= head_js_after %>
              <% } %>
            <% } %>
          <% } %>
        </head>
      <% } %>

      <% if(typeof external_body !== 'undefined') { %>
        <%= external_body %>
      <% } else { %>
        <body>
          <% if(typeof body !== 'undefined') { %>
            <%- body %>
          <% } else { %>
            <% if(typeof body_template !== 'undefined') { %>
              <%= body_template %>
            <% } else { %>
              <%/*
                  Client-side Templates
                  ========================

                  HTML templates are important prerequisites of modern, rich client applications.
                  To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
                  that you load these templates client-side.

                  By default, your Gruntfile is configured to automatically load and precompile
                  client-side JST templates in your `assets/templates` folder, then
                  include them here automatically (between TEMPLATES and TEMPLATES END).

                  To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
                  For example, here are a few things you could do:

                      + Import templates from other directories
                      + Use a different template engine (handlebars, jade, dust, etc.)
                      + Internationalize your client-side templates using a server-side
                        stringfile before they're served.
              */%>
              <!--TEMPLATES-->
              <!--TEMPLATES END-->
            <% } %>
            <% if(typeof body_js !== 'undefined') { %>
              <%= body_js %>
            <% } else { %>
              <%/*

                Client-side Javascript
                ========================

                You can always bring in JS files manually with `script` tags, or asynchronously
                on the client using a solution like AMD (RequireJS).  Or, if you like, you can
                take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

                By default, files in your `assets/js` folder are included here
                automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
                CoffeeScript (.coffee) are supported. In production, your scripts will be minified
                and concatenated into a single file.

                To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
                For example, here are a few things you could do:

                    + Change the order of your scripts
                    + Import scripts from other directories
                    + Use a different preprocessor, like TypeScript

              */%>
              <!--SCRIPTS-->
              <% if (typeof body_js != 'undefined') { %>
                <%= body_js %>
              <% } else { %>
                <% if (typeof body_js_before != 'undefined') { %>
                  <%= body_js_before %>
                <% } %>
                <script src="/js/dependencies/sails.io.js"></script>
                <% if (typeof body_js_after != 'undefined') { %>
                  <%= body_js_after %>
                <% } %>
              <% } %>
              <!--SCRIPTS END-->
            <% } %>
          </body>
        <% } %>
      <% } %>
    <% } %>
  </html>
<% } %>